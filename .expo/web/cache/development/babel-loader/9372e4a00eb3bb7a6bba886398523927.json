{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Desktop\\\\FocusTime-app-main\\\\src\\\\features\\\\timer\\\\Timer.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ProgressBar } from 'react-native-paper';\nimport { colors } from \"../../utils/colors\";\nimport { spacing } from \"../../utils/sizes\";\nimport { Countdown } from \"../../components/Countdown\";\nimport { RoundedButton } from \"../../components/RoundedButton\";\nexport var Timer = function Timer(_ref) {\n  var focusSubject = _ref.focusSubject;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isStarted = _useState2[0],\n      setIsStarted = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      progress = _useState4[0],\n      setProgress = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.countdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Countdown, {\n    isPaused: !isStarted,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: spacing.xxl\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Focusing on: \"), React.createElement(Text, {\n    style: styles.task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, focusSubject)), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(ProgressBar, {\n    progress: progress,\n    color: \"#5E84E2\",\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, isStarted ? React.createElement(RoundedButton, {\n    title: \"pause\",\n    onPress: function onPress() {\n      return setIsStarted(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }) : React.createElement(RoundedButton, {\n    title: \"start\",\n    onPress: function onPress() {\n      return setIsStarted(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  title: {\n    color: colors.white,\n    textAlign: 'center'\n  },\n  task: {\n    color: colors.white,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  countdown: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonWrapper: {\n    flex: 0.3,\n    padding: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/stefa/Desktop/FocusTime-app-main/src/features/timer/Timer.js"],"names":["React","useState","ProgressBar","colors","spacing","Countdown","RoundedButton","Timer","focusSubject","isStarted","setIsStarted","progress","setProgress","styles","container","countdown","paddingTop","xxl","title","task","height","buttonWrapper","StyleSheet","create","flex","color","white","textAlign","fontWeight","alignItems","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\nimport { ProgressBar } from 'react-native-paper'\n\nimport { colors } from '../../utils/colors'\nimport { spacing } from '../../utils/sizes'\nimport { Countdown } from '../../components/Countdown'\nimport { RoundedButton } from '../../components/RoundedButton'\n\nexport const Timer = ({ focusSubject }) => {\n\n\n    const [isStarted, setIsStarted] = useState(false)\n    const [progress, setProgress] = useState(1)\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.countdown}>\n                <Countdown isPaused={!isStarted} />\n            </View>\n            <View style={{ paddingTop: spacing.xxl }}>\n                <Text style={styles.title}>Focusing on: </Text>\n                <Text style={styles.task}>{focusSubject}</Text>\n            </View>\n            <View>\n            <ProgressBar \n                progress={progress}\n                color='#5E84E2'\n                style={{ height: 10 }}\n            />\n            </View>\n            <View style={styles.buttonWrapper}>\n            {isStarted ? (\n                <RoundedButton title=\"pause\"  onPress={() => setIsStarted(false)} />\n            ) : (  <RoundedButton title=\"start\"  onPress={() => setIsStarted(true)} />\n            )}\n            </View>\n        </View>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    title: {\n        color: colors.white,\n        textAlign: 'center'\n    },\n    task: {\n        color: colors.white,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    countdown: {\n        flex: 0.5,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    buttonWrapper: {\n        flex: 0.3,\n        padding: 50,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n})"]},"metadata":{},"sourceType":"module"}