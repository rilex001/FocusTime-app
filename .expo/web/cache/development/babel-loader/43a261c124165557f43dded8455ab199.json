{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\risti\\\\Desktop\\\\udemy\\\\src\\\\features\\\\timer\\\\Timer.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { colors } from \"../../utils/colors\";\nimport { spacing } from \"../../utils/sizes\";\nimport { Countdown } from \"../../components/Countdown\";\nimport { RoundedButton } from \"../../components/RoundedButton\";\nexport var Timer = function Timer(_ref) {\n  var focusSubject = _ref.focusSubject;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isStarted = _useState2[0],\n      setIsStarted = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.countdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, React.createElement(Countdown, {\n    isPaused: !isStarted,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: spacing.xxl\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Focusing on: \"), React.createElement(Text, {\n    style: styles.task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, focusSubject)), isStarted ? React.createElement(RoundedButton, {\n    title: \"pause\",\n    onPress: function onPress() {\n      return setIsStarted(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }) : React.createElement(RoundedButton, {\n    title: \"start\",\n    onPress: function onPress() {\n      return setIsStarted(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  title: {\n    color: colors.white,\n    textAlign: 'center'\n  },\n  task: {\n    color: colors.white,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  countdown: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/risti/Desktop/udemy/src/features/timer/Timer.js"],"names":["React","useState","colors","spacing","Countdown","RoundedButton","Timer","focusSubject","isStarted","setIsStarted","styles","container","countdown","paddingTop","xxl","title","task","StyleSheet","create","flex","color","white","textAlign","fontWeight","alignItems","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAGA,SAASC,MAAT;AACA,SAASC,OAAT;AACA,SAASC,SAAT;AACA,SAASC,aAAT;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAGvC,kBAAkCN,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAE,CAACJ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAU,EAAEV,OAAO,CAACW;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BT,YAA3B,CAFJ,CAJJ,EAQKC,SAAS,GACN,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,OAArB;AAA8B,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEH,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,OAArB;AAA8B,IAAA,OAAO,EAAE;AAAA,aAAMA,YAAY,CAAC,KAAD,CAAlB;AAAA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVX,CADJ;AAgBH,CArBM;AAwBP,IAAMC,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BJ,EAAAA,KAAK,EAAE;AACHK,IAAAA,KAAK,EAAElB,MAAM,CAACmB,KADX;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAJsB;AAQ7BN,EAAAA,IAAI,EAAE;AACFI,IAAAA,KAAK,EAAElB,MAAM,CAACmB,KADZ;AAEFE,IAAAA,UAAU,EAAE,MAFV;AAGFD,IAAAA,SAAS,EAAE;AAHT,GARuB;AAa7BV,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,GADC;AAEPK,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE;AAHT;AAbkB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { View, StyleSheet, Text } from 'react-native'\r\n\r\nimport { colors } from '../../utils/colors'\r\nimport { spacing } from '../../utils/sizes'\r\nimport { Countdown } from '../../components/Countdown'\r\nimport { RoundedButton } from '../../components/RoundedButton'\r\n\r\nexport const Timer = ({ focusSubject }) => {\r\n\r\n\r\n    const [isStarted, setIsStarted] = useState(false)\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.countdown}>\r\n                <Countdown isPaused={!isStarted} />\r\n            </View>\r\n            <View style={{ paddingTop: spacing.xxl }}>\r\n                <Text style={styles.title}>Focusing on: </Text>\r\n                <Text style={styles.task}>{focusSubject}</Text>\r\n            </View>\r\n            {isStarted ? (\r\n                <RoundedButton title=\"pause\"  onPress={() => setIsStarted(false)} />\r\n            ) : (  <RoundedButton title=\"start\"  onPress={() => setIsStarted(false)} />\r\n            )}\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    title: {\r\n        color: colors.white,\r\n        textAlign: 'center'\r\n    },\r\n    task: {\r\n        color: colors.white,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    },\r\n    countdown: {\r\n        flex: 0.5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}