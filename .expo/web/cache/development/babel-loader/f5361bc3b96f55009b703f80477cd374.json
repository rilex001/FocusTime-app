{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\risti\\\\Desktop\\\\udemy\\\\src\\\\features\\\\timer\\\\Timer.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ProgressBar } from 'react-native-paper';\nimport { useKeepAwake } from 'expo-keep-awake';\nimport { colors } from \"../../utils/colors\";\nimport { spacing } from \"../../utils/sizes\";\nimport { Countdown } from \"../../components/Countdown\";\nimport { RoundedButton } from \"../../components/RoundedButton\";\nimport { Timing } from \"./Timing\";\nvar DEFAULT_TIME = 0.1;\nexport var Timer = function Timer(_ref) {\n  var focusSubject = _ref.focusSubject,\n      onTimerEnd = _ref.onTimerEnd,\n      clearSubject = _ref.clearSubject;\n  useKeepAwake();\n  var interval = React.useRef(null);\n\n  var _useState = useState(DEFAULT_TIME),\n      _useState2 = _slicedToArray(_useState, 2),\n      minutes = _useState2[0],\n      setMinutes = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isStarted = _useState4[0],\n      setIsStarted = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var onProgress = function onProgress(progress) {\n    setProgress(progress);\n  };\n\n  var vibrate = function vibrate() {\n    if (Platform.OS === 'ios') {\n      var _interval = setInterval(function () {\n        return Vibration.vibrate();\n      }, 1000);\n\n      setTimeout(function () {\n        return clearInterval(_interval);\n      }, 10000);\n    } else {\n      Vibration.vibrate(4000);\n    }\n  };\n\n  var onEnd = function onEnd() {\n    vibrate();\n    setMinutes(DEFAULT_TIME);\n    setProgress(1);\n    setIsStarted(false);\n    onTimerEnd();\n  };\n\n  var changeTime = function changeTime(min) {\n    setMinutes(min);\n    setProgress(1);\n    setIsStarted(false);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.countdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Countdown, {\n    minutes: minutes,\n    isPaused: !isStarted,\n    onProgress: onProgress,\n    onEnd: onEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.top,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Focusing on: \"), React.createElement(Text, {\n    style: styles.task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, focusSubject)), React.createElement(View, {\n    style: styles.top1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(ProgressBar, {\n    progress: progress,\n    color: \"#5E84E2\",\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Timing, {\n    onChangeTime: changeTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttonWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, isStarted ? React.createElement(RoundedButton, {\n    title: \"pause\",\n    onPress: function onPress() {\n      return setIsStarted(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }) : React.createElement(RoundedButton, {\n    title: \"start\",\n    onPress: function onPress() {\n      return setIsStarted(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  })), React.createElement(View, {\n    style: styles.clearSubject,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(RoundedButton, {\n    title: \"-\",\n    size: 50,\n    onPress: function onPress() {\n      return clearSubject();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  top1: {\n    paddingTop: spacing.lg\n  },\n  top: {\n    paddingTop: spacing.xxxl\n  },\n  title: {\n    color: colors.white,\n    textAlign: 'center'\n  },\n  task: {\n    color: colors.white,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  countdown: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonWrapper: {\n    flex: 0.3,\n    flexDirection: 'row',\n    padding: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  clearSubject: {\n    paddingBottom: 25,\n    paddingLeft: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/risti/Desktop/udemy/src/features/timer/Timer.js"],"names":["React","useState","ProgressBar","useKeepAwake","colors","spacing","Countdown","RoundedButton","Timing","DEFAULT_TIME","Timer","focusSubject","onTimerEnd","clearSubject","interval","useRef","minutes","setMinutes","isStarted","setIsStarted","progress","setProgress","onProgress","vibrate","Platform","OS","setInterval","Vibration","setTimeout","clearInterval","onEnd","changeTime","min","styles","container","countdown","top","title","task","top1","height","buttonWrapper","StyleSheet","create","flex","paddingTop","lg","xxxl","color","white","textAlign","fontWeight","alignItems","justifyContent","flexDirection","padding","paddingBottom","paddingLeft"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { View, StyleSheet, Text, Vibration, Platform } from 'react-native'\nimport { ProgressBar } from 'react-native-paper'\nimport { useKeepAwake } from 'expo-keep-awake'\n\nimport { colors } from '../../utils/colors'\nimport { spacing } from '../../utils/sizes'\nimport { Countdown } from '../../components/Countdown'\nimport { RoundedButton } from '../../components/RoundedButton'\nimport { Timing } from './Timing'\n\nconst DEFAULT_TIME = 0.1\n\nexport const Timer = ({ focusSubject, onTimerEnd, clearSubject }) => {\n    useKeepAwake()\n\n    const interval = React.useRef(null)\n    const [minutes, setMinutes] = useState(DEFAULT_TIME)\n    const [isStarted, setIsStarted] = useState(false)\n    const [progress, setProgress] = useState(1)\n\n    const onProgress = (progress) => {\n        setProgress(progress)\n    }\n\n    const vibrate = () => {\n        if(Platform.OS === 'ios') {\n            const interval = setInterval(() => Vibration.vibrate(), 1000)\n            setTimeout(() => clearInterval(interval), 10000)\n        } else {\n            Vibration.vibrate(4000)\n        }\n    }\n\n    const onEnd = () => {\n        vibrate()\n        setMinutes(DEFAULT_TIME)\n        setProgress(1)\n        setIsStarted(false)\n        onTimerEnd()\n    }\n\n    const changeTime = (min) => {\n        setMinutes(min)\n        setProgress(1)\n        setIsStarted(false)\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.countdown}>\n                <Countdown\n                    minutes={minutes} \n                    isPaused={!isStarted} \n                    onProgress={onProgress} \n                    onEnd={onEnd}\n                />\n            </View>\n            <View style={styles.top}>\n                <Text style={styles.title}>Focusing on: </Text>\n                <Text style={styles.task}>{focusSubject}</Text>\n            </View>\n            <View style={styles.top1}>  \n            <ProgressBar \n                progress={progress}\n                color='#5E84E2'\n                style={{ height: 10 }}\n            />\n            </View>\n            <View style={styles.buttonWrapper}>\n                <Timing onChangeTime={changeTime} />\n            </View>\n            <View style={styles.buttonWrapper}>\n            {isStarted ? (\n                <RoundedButton title=\"pause\"  onPress={() => setIsStarted(false)} />\n            ) : (  <RoundedButton title=\"start\"  onPress={() => setIsStarted(true)} />\n            )}           \n            </View>\n            <View style={styles.clearSubject}>\n                <RoundedButton \n                    title=\"-\" \n                    size={50}  \n                    onPress={() => clearSubject()} \n                />\n            </View>\n        </View>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    top1: {\n        paddingTop: spacing.lg\n    },\n    top: {\n        paddingTop: spacing.xxxl\n    },\n    title: {\n        color: colors.white,\n        textAlign: 'center'\n    },\n    task: {\n        color: colors.white,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    countdown: {\n        flex: 0.5,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    buttonWrapper: {\n        flex: 0.3,\n        flexDirection: 'row',\n        padding: 15,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    clearSubject: {\n        paddingBottom: 25,\n        paddingLeft: 25\n    }\n})"]},"metadata":{},"sourceType":"module"}